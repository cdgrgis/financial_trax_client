{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Home.jsx","api/account.js","components/account/Accounts.jsx","components/account/Account.jsx","components/account/AccountForm.jsx","components/account/AccountCreate.jsx","components/account/AccountUpdate.jsx","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","console","log","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Home","indexAccount","get","showAccount","createAccount","company","balance","inception","accountnumber","account","account_number","updateAccount","deleteAccount","Accounts","accounts","setAccounts","navigateCreate","setNavigateCreate","fetchData","mappedAccounts","length","map","onClick","Spinner","animation","role","Account","setAccount","deleted","setDeleted","useParams","handleDelete","AccountForm","handleSubmit","setType","setCompany","setBalance","setInception","setAccountnumber","AccountCreate","createdId","setCreatedId","AccountEdit","updated","setUpdated","App","msgAlerts","setMsgAlerts","uuid","path","element","AccountUpdate","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a82c56da.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\n// We have imported some custom styling for this alert\r\n// Which will be off-topic, unless extra time at the end of the lesson.\r\nimport './AutoDismissAlert.scss'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction AutoDismissAlert ({ variant, heading, message }) {\r\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\r\n  const [show, setShow] = useState(true)\r\n  // We are going to create a timer that will stop showing the alert after 5 seconds\r\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\r\n  const [timeoutId, setTimeoutId] = useState(null)\r\n\r\n  // this will run once, when the component is mounted (added) to the screen\r\n  // it runs once, because it has an empty dependency array as the second argument\r\n  useEffect(() => {\r\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\r\n    const id = setTimeout(() => setShow(false), 5000)\r\n    // Keep track of the timeoutId\r\n    setTimeoutId(id)\r\n\r\n    // We want to clean up the timer\r\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\r\n    // and its also run before an effect is re-created\r\n    return function cleanup () {\r\n      clearTimeout(timeoutId)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Alert\r\n      /* This is the color, make it the bootstrap passed down as a prop */\r\n      variant={variant}\r\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\r\n      onClose={() => setShow(false)}\r\n      /* This adds a close button to our alert */\r\n      dismissible\r\n      /* The show property will display the alert if true, and hide it if false. */\r\n      show={show}\r\n    >\r\n      <div className='container'>\r\n        <Alert.Heading>{heading}</Alert.Heading>\r\n        <p className='alert-body'>{message}</p>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst authenticatedOptions = (\r\n  <>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n    <NavLink to='/accounts' className='nav-link'>Accounts</NavLink>\r\n    <NavLink to='/accounts/create' className='nav-link'>Create Account</NavLink>\r\n  </>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </>\r\n)\r\n\r\nconst alwaysOptions = (\r\n  <>\r\n    <NavLink to='/' className='nav-link'>Home</NavLink>\r\n  </>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar bg='primary' variant='dark' expand='md'>\r\n    <Container>\r\n      <Navbar.Brand>\r\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>react-auth-template</Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse id='basic-navbar-nav'>\r\n        <Nav className='ms-auto'>\r\n          {user && (\r\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\r\n          )}\r\n          {alwaysOptions}\r\n          {user ? authenticatedOptions : unauthenticatedOptions}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\r\nconst apiUrls = {\r\n  production: 'https://aqueous-atoll-85096.herokuapp.com',\r\n  development: 'http://localhost:8000'\r\n}\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (email, password, passwordConfirmation) => {\r\n  return axios.post(apiUrl + '/sign-up/', {\r\n    credentials: {\r\n      email,\r\n      password,\r\n      password_confirmation: passwordConfirmation\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (email, password) => {\r\n  return axios.post(apiUrl + '/sign-in/', {\r\n    credentials: {\r\n      email,\r\n      password\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = user => {\r\n  return axios.delete(apiUrl + '/sign-out/', {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (oldPassword, newPassword, user) => {\r\n  return axios.patch(\r\n    apiUrl + '/change-pw/',\r\n    {\r\n      passwords: {\r\n        old: oldPassword,\r\n        new: newPassword\r\n      }\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignUp = ({ msgAlert, setUser }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onSignUp = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await signUp(email, password, passwordConfirmation)\r\n      const res = await signIn(email, password)\r\n      setUser(res.data.user)\r\n      msgAlert({\r\n        heading: 'Sign Up Success',\r\n        message: signUpSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setEmail('')\r\n      setPassword('')\r\n      setPasswordConfirmation('')\r\n      msgAlert({\r\n        heading: 'Sign Up Failed with error: ' + error.message,\r\n        message: signUpFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign Up</h3>\r\n        <Form onSubmit={onSignUp}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={event => setEmail(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={event => setPassword(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='passwordConfirmation'>\r\n            <Form.Label>Password Confirmation</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='passwordConfirmation'\r\n              value={passwordConfirmation}\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              onChange={event => setPasswordConfirmation(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'Welcome!'\r\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignIn = ({ msgAlert, setUser }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onSignIn = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await signIn(email, password)\r\n      setUser(res.data.user)\r\n      console.log('user ', res.data.user)\r\n\r\n      msgAlert({\r\n        heading: 'Sign In Success',\r\n        message: signInSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setEmail('')\r\n      setPassword('')\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign In</h3>\r\n        <Form onSubmit={onSignIn}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={event => setEmail(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={event => setPassword(event.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signOut } from '../../api/auth'\r\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\r\n\r\nconst SignOut = ({ msgAlert, clearUser, user }) => {\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  // this is like componentDidMount, it will run whenever the SignOut component\r\n  // is mounted (or added) to the page\r\n  useEffect(() => {\r\n  // for performance reasons, when using `useEffect`\r\n  // it's a best practice to create a helper function w/ async/await\r\n    const performSignOut = async () => {\r\n    // make a signOut axios request\r\n      await signOut(user)\r\n\r\n      msgAlert({\r\n        heading: 'Signed Out Successfully',\r\n        message: signOutSuccess,\r\n        variant: 'success'\r\n      })\r\n\r\n      // reset the user back to its initial value\r\n      clearUser()\r\n      setShouldNavigate(true)\r\n    }\r\n    performSignOut()\r\n  }, [])\r\n\r\n  if (!user || shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport default SignOut\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst ChangePassword = ({ msgAlert, user }) => {\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onChangePassword = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await changePassword(oldPassword, newPassword, user)\r\n      msgAlert({\r\n        heading: 'Change Password Success',\r\n        message: changePasswordSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setOldPassword('')\r\n      setNewPassword('')\r\n      msgAlert({\r\n        heading: 'Change Password Failed with error: ' + error.message,\r\n        message: changePasswordFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!user || shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Change Password</h3>\r\n        <Form onSubmit={onChangePassword}>\r\n          <Form.Group controlId='oldPassword'>\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='oldPassword'\r\n              value={oldPassword}\r\n              type='password'\r\n              placeholder='Old Password'\r\n              onChange={event => setOldPassword(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='newPassword'>\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='newPassword'\r\n              value={newPassword}\r\n              type='password'\r\n              placeholder='New Password'\r\n              onChange={event => setNewPassword(event.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React from 'react'\r\n\r\nconst Home = () => (\r\n  <>\r\n    <h1>Welcome to Financial Trax</h1>\r\n  </>\r\n)\r\n\r\nexport default Home\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const indexAccount = (user) => {\r\n  return axios.get(apiUrl + '/accounts/', {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const showAccount = (user, id) => {\r\n  return axios.get(apiUrl + `/accounts/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const createAccount = (user, type, company, balance, inception, accountnumber) => {\r\n  console.log('user ', user.token)\r\n  return axios.post(apiUrl + '/accounts/',\r\n    {\r\n      account: { type, company, balance, inception, account_number: accountnumber }\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const updateAccount = (user, id, type, company, balance, inception, accountnumber) => {\r\n  return axios.patch(apiUrl + `/accounts/${id}/`,\r\n    {\r\n      account: { type, company, balance, inception, account_number: accountnumber }\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const deleteAccount = (user, id) => {\r\n  return axios.delete(apiUrl + `/accounts/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\nimport { indexAccount } from '../../api/account'\r\n\r\nconst Accounts = ({ user, msgAlert }) => {\r\n  if (!user) return <Navigate to ='/' />\r\n\r\n  const [accounts, setAccounts] = useState([])\r\n  const [navigateCreate, setNavigateCreate] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await indexAccount(user)\r\n        console.log('res ', res.data)\r\n        setAccounts(res.data.accounts)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Accounts List failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleNavigateCreate = () => {\r\n    setNavigateCreate(true)\r\n  }\r\n\r\n  console.log('account ', accounts)\r\n  let mappedAccounts\r\n  // If accounts is null, accounts is still loading\r\n  if (!accounts) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (accounts.length === 0) {\r\n    return <h1>No accounts have been added</h1>\r\n  } else if (navigateCreate) {\r\n    return <Navigate to='/accounts/create' />\r\n  } else {\r\n    mappedAccounts = accounts.map(account => (\r\n      <li key={account.id}>\r\n        <Link to={`/accounts/${account.id}`}>{account.company} - {account.type} - {account.account_number}</Link>\r\n      </li>\r\n    ))\r\n    console.log(setNavigateCreate)\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n            <Button variant='success' onClick={handleNavigateCreate}>Create</Button>\r\n            <h3>Accounts</h3>\r\n            <p>Company - Account Type - Account Number</p>\r\n            <ul>{mappedAccounts}</ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Accounts\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\n\r\nimport { deleteAccount, showAccount } from '../../api/account'\r\n\r\nconst Account = ({ user, msgAlert }) => {\r\n  const [account, setAccount] = useState({})\r\n  const [deleted, setDeleted] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  if (!user) return <Navigate to='/' />\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showAccount(user, id)\r\n        console.log('res ', res.data)\r\n        setAccount(res.data.account)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Account failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteAccount(user, id)\r\n      setDeleted(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to delete account',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!account) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (deleted) {\r\n    return <Navigate to='/accounts/' />\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n            <h1>Type: {account.type}</h1>\r\n            <h3>Account Number: {account.account_number}</h3>\r\n            <h3>Company: {account.company}</h3>\r\n            <h3>Balance: {account.balance}</h3>\r\n            <h3>Inception: {account.inception}</h3>\r\n\r\n            <Button variant='danger' onClick={handleDelete}>Delete Account</Button>\r\n            <Link to={`/accounts/${id}/edit`}>\r\n              <Button variant='primary' type='submit'>Update Account</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account\r\n","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst AccountForm = ({ handleSubmit, type, company, balance, inception, accountnumber, setType, setCompany, setBalance, setInception, setAccountnumber }) => (\r\n  <Form onSubmit={handleSubmit}>\r\n    <Form.Group controlId='type'>\r\n      <Form.Label>Type</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Type'\r\n        type='type'\r\n        value={type}\r\n        onChange={event => setType(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='accountnumber'>\r\n      <Form.Label>Account Number</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Number'\r\n        accountnumber='accountnumber'\r\n        value={accountnumber}\r\n        onChange={event => setAccountnumber(event.target.value)}\r\n        // onChange={event => setAccountData(prev => ({ account: { ...prev.account, }}))}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='company'>\r\n      <Form.Label>Company</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Company'\r\n        company='company'\r\n        value={company}\r\n        onChange={event => setCompany(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='balance'>\r\n      <Form.Label>Balance</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Balance'\r\n        balance='balance'\r\n        value={balance}\r\n        onChange={event => setBalance(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='inception'>\r\n      <Form.Label>Inception</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Inception'\r\n        inception='inception'\r\n        value={inception}\r\n        onChange={event => setInception(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n  </Form>\r\n)\r\n\r\nexport default AccountForm\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n// Import AccountForm:\r\nimport AccountForm from './AccountForm'\r\nimport { createAccount } from '../../api/account'\r\n\r\nconst AccountCreate = ({ user, msgAlert }) => {\r\n  const [type, setType] = useState('')\r\n  const [company, setCompany] = useState('')\r\n  const [balance, setBalance] = useState(0)\r\n  const [inception, setInception] = useState('')\r\n  const [accountnumber, setAccountnumber] = useState('')\r\n  const [createdId, setCreatedId] = useState('')\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await createAccount(user, type, company, balance, inception, accountnumber)\r\n      console.log('res ', res.data.account)\r\n      setCreatedId(res.data.account.id)\r\n\r\n      msgAlert({\r\n        heading: 'Account Created',\r\n        message: `Created ${type} successfully.`,\r\n        variant: 'success'\r\n      })\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to create account',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  // if user is null, redirect to home page\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  } else if (createdId) {\r\n    // if movie has been created,Navigate to the 'show' page\r\n    return <Navigate to={`/accounts/${createdId}`} />\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Create Account</h3>\r\n        <AccountForm\r\n          handleSubmit={handleSubmit}\r\n          type={type}\r\n          company={company}\r\n          balance={balance}\r\n          inception={inception}\r\n          accountnumber={accountnumber}\r\n          setType={setType}\r\n          setCompany={setCompany}\r\n          setBalance={setBalance}\r\n          setInception={setInception}\r\n          setAccountnumber={setAccountnumber}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountCreate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\n\r\nimport AccountForm from './AccountForm'\r\nimport { showAccount, updateAccount } from '../../api/account'\r\n\r\nconst AccountEdit = ({ user, msgAlert }) => {\r\n  const [type, setType] = useState('')\r\n  const [company, setCompany] = useState('')\r\n  const [balance, setBalance] = useState('')\r\n  const [inception, setInception] = useState('')\r\n  const [accountnumber, setAccountnumber] = useState('')\r\n  const [updated, setUpdated] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showAccount(user, id)\r\n        console.log('res ', res)\r\n        setType(res.data.account.type)\r\n        setCompany(res.data.account.company)\r\n        setBalance(res.data.account.balance)\r\n        setInception(res.data.account.inception)\r\n        setAccountnumber(res.data.account.account_number)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Failed to load account',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await updateAccount(user, id, type, company, balance, inception, accountnumber)\r\n      setUpdated(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to update account',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (updated) {\r\n    // Navigate to the 'show' page\r\n    return <Navigate to={`/accounts/${id}`} />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Edit Account</h3>\r\n        <AccountForm\r\n          handleSubmit={handleSubmit}\r\n          type={type}\r\n          company={company}\r\n          balance={balance}\r\n          inception={inception}\r\n          accountnumber={accountnumber}\r\n          setType={setType}\r\n          setCompany={setCompany}\r\n          setBalance={setBalance}\r\n          setInception={setInception}\r\n          setAccountnumber={setAccountnumber}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountEdit\r\n","/* eslint-disable no-tabs */\r\nimport React, { useState } from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport Home from './components/Home'\r\nimport Accounts from './components/account/Accounts'\r\nimport Account from './components/account/Account'\r\nimport AccountCreate from './components/account/AccountCreate'\r\nimport AccountUpdate from './components/account/AccountUpdate'\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null)\r\n  const [msgAlerts, setMsgAlerts] = useState([])\r\n\r\n  const clearUser = () => setUser(null)\r\n\r\n  const msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header user={user} />\r\n      {msgAlerts.map(msgAlert => (\r\n        <AutoDismissAlert\r\n          key={msgAlert.id}\r\n          heading={msgAlert.heading}\r\n          variant={msgAlert.variant}\r\n          message={msgAlert.message}\r\n          id={msgAlert.id}\r\n        />\r\n      ))}\r\n      <main className='container'>\r\n        <Routes>\r\n          <Route\r\n            path='/'\r\n            element={<Home /> }\r\n          />\r\n\r\n          <Route\r\n            path='/sign-up/'\r\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\r\n          />\r\n          <Route\r\n            path='/sign-in/'\r\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\r\n          />\r\n          <Route\r\n            path='/sign-out/'\r\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/change-password/'\r\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/accounts/'\r\n            element={<Accounts msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/accounts/:id'\r\n            element={<Account msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/accounts/create'\r\n            element={<AccountCreate msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/accounts/:id/edit'\r\n            element={<AccountUpdate msgAlert={msgAlert} user={user} /> }\r\n          />\r\n\r\n        </Routes>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst appJsx = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(appJsx, document.getElementById('root'))\r\n"],"sourceRoot":""}