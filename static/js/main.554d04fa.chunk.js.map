{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Home.jsx","api/account.js","components/account/Accounts.jsx","components/fund/FundForm.jsx","api/fund.js","api/fund-info.js","components/account/Account.jsx","components/account/AccountForm.jsx","components/account/AccountCreate.jsx","components/account/AccountUpdate.jsx","components/fund/Funds.jsx","components/fund/Fund.jsx","components/fund/FundCreate.jsx","components/fund/FundUpdate.jsx","components/fund-info/FundInfo.jsx","api/polygon.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","localStorage","setItem","JSON","stringify","SignOut","clearUser","clear","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Home","indexAccount","get","showAccount","createAccount","account","updateAccount","deleteAccount","Accounts","mappedAccounts","accounts","setAccounts","navigateCreate","setNavigateCreate","fetchData","handleNavigateCreate","length","onClick","map","company","account_number","Spinner","animation","role","FundForm","handleSubmit","fund","setFund","fundInfo","setFundInfo","ticker_symbol","prev","company_name","price","amount_owned","indexFund","showFund","createFund","updateFund","deleteFund","deleteFundInfo","Account","mappedFunds","setAccount","fundInfoData","setFundInfoData","balance","setBalance","deleted","setDeleted","fundCreatedId","setFundCreatedId","useParams","amountOwned","setAmountOwned","Promise","resolve","reject","console","log","then","indexAccountSpecificFundInfo","fundRes","balance__sum","fund_infos","catch","err","handleDelete","inception","newFundInfo","fund_info","createFundInfo","error","AccountForm","handleAccountChange","AccountCreate","createdId","setCreatedId","AccountEdit","updated","setUpdated","Funds","funds","setFunds","Fund","FundCreate","FundEdit","FundInfo","stockData","setStockData","showFundInfo","tickerSymbol","indexStockData","close","open","high","low","App","msgAlerts","setMsgAlerts","loggedInUser","getItem","foundUser","parse","uuid","path","element","AccountUpdate","FundUpdate","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.554d04fa.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\n// We have imported some custom styling for this alert\r\n// Which will be off-topic, unless extra time at the end of the lesson.\r\nimport './AutoDismissAlert.scss'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction AutoDismissAlert ({ variant, heading, message }) {\r\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\r\n  const [show, setShow] = useState(true)\r\n  // We are going to create a timer that will stop showing the alert after 5 seconds\r\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\r\n  const [timeoutId, setTimeoutId] = useState(null)\r\n\r\n  // this will run once, when the component is mounted (added) to the screen\r\n  // it runs once, because it has an empty dependency array as the second argument\r\n  useEffect(() => {\r\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\r\n    const id = setTimeout(() => setShow(false), 5000)\r\n    // Keep track of the timeoutId\r\n    setTimeoutId(id)\r\n\r\n    // We want to clean up the timer\r\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\r\n    // and its also run before an effect is re-created\r\n    return function cleanup () {\r\n      clearTimeout(timeoutId)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Alert\r\n      /* This is the color, make it the bootstrap passed down as a prop */\r\n      variant={variant}\r\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\r\n      onClose={() => setShow(false)}\r\n      /* This adds a close button to our alert */\r\n      dismissible\r\n      /* The show property will display the alert if true, and hide it if false. */\r\n      show={show}\r\n    >\r\n      <div className='container'>\r\n        <Alert.Heading>{heading}</Alert.Heading>\r\n        <p className='alert-body'>{message}</p>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst authenticatedOptions = (\r\n  <>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n    <NavLink to='/accounts' className='nav-link'>Accounts</NavLink>\r\n  </>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </>\r\n)\r\n\r\nconst alwaysOptions = (\r\n  <>\r\n    <NavLink to='/' className='nav-link'>Home</NavLink>\r\n  </>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar bg='info' variant='dark' expand='md'>\r\n    <Container>\r\n      <Navbar.Brand>\r\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>$$ Financial Trax $$</Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse id='basic-navbar-nav'>\r\n        <Nav className='ms-auto'>\r\n          {user && (\r\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\r\n          )}\r\n          {alwaysOptions}\r\n          {user ? authenticatedOptions : unauthenticatedOptions}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\r\nconst apiUrls = {\r\n  production: 'https://dashboard.heroku.com/apps/financial-trax-api',\r\n  development: 'http://localhost:8000'\r\n}\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (email, password, passwordConfirmation) => {\r\n  return axios.post(apiUrl + '/sign-up/', {\r\n    credentials: {\r\n      email,\r\n      password,\r\n      password_confirmation: passwordConfirmation\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (email, password) => {\r\n  return axios.post(apiUrl + '/sign-in/', {\r\n    credentials: {\r\n      email,\r\n      password\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = user => {\r\n  return axios.delete(apiUrl + '/sign-out/', {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (oldPassword, newPassword, user) => {\r\n  return axios.patch(\r\n    apiUrl + '/change-pw/',\r\n    {\r\n      passwords: {\r\n        old: oldPassword,\r\n        new: newPassword\r\n      }\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignUp = ({ msgAlert, setUser }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onSignUp = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await signUp(email, password, passwordConfirmation)\r\n      const res = await signIn(email, password)\r\n      setUser(res.data.user)\r\n      msgAlert({\r\n        heading: 'Sign Up Success',\r\n        message: signUpSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setEmail('')\r\n      setPassword('')\r\n      setPasswordConfirmation('')\r\n      msgAlert({\r\n        heading: 'Sign Up Failed with error: ' + error.message,\r\n        message: signUpFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign Up</h3>\r\n        <Form onSubmit={onSignUp}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={event => setEmail(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={event => setPassword(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='passwordConfirmation'>\r\n            <Form.Label>Password Confirmation</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='passwordConfirmation'\r\n              value={passwordConfirmation}\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              onChange={event => setPasswordConfirmation(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'Welcome!'\r\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignIn = ({ msgAlert, setUser }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onSignIn = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await signIn(email, password)\r\n      setUser(res.data.user)\r\n      localStorage.setItem('user', JSON.stringify(res.data.user))\r\n\r\n      msgAlert({\r\n        heading: 'Sign In Success',\r\n        message: signInSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setEmail('')\r\n      setPassword('')\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign In</h3>\r\n        <Form onSubmit={onSignIn}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={event => setEmail(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={event => setPassword(event.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signOut } from '../../api/auth'\r\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\r\n\r\nconst SignOut = ({ msgAlert, clearUser, user }) => {\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  // this is like componentDidMount, it will run whenever the SignOut component\r\n  // is mounted (or added) to the page\r\n  useEffect(() => {\r\n  // for performance reasons, when using `useEffect`\r\n  // it's a best practice to create a helper function w/ async/await\r\n    const performSignOut = async () => {\r\n    // make a signOut axios request\r\n      await signOut(user)\r\n\r\n      msgAlert({\r\n        heading: 'Signed Out Successfully',\r\n        message: signOutSuccess,\r\n        variant: 'success'\r\n      })\r\n\r\n      // reset the user back to its initial value\r\n      clearUser()\r\n      localStorage.clear()\r\n      setShouldNavigate(true)\r\n    }\r\n    performSignOut()\r\n  }, [])\r\n\r\n  if (!user || shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport default SignOut\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { changePassword } from '../../api/auth'\r\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst ChangePassword = ({ msgAlert, user }) => {\r\n  const [oldPassword, setOldPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onChangePassword = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await changePassword(oldPassword, newPassword, user)\r\n      msgAlert({\r\n        heading: 'Change Password Success',\r\n        message: changePasswordSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setOldPassword('')\r\n      setNewPassword('')\r\n      msgAlert({\r\n        heading: 'Change Password Failed with error: ' + error.message,\r\n        message: changePasswordFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!user || shouldNavigate) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Change Password</h3>\r\n        <Form onSubmit={onChangePassword}>\r\n          <Form.Group controlId='oldPassword'>\r\n            <Form.Label>Old password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='oldPassword'\r\n              value={oldPassword}\r\n              type='password'\r\n              placeholder='Old Password'\r\n              onChange={event => setOldPassword(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='newPassword'>\r\n            <Form.Label>New Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='newPassword'\r\n              value={newPassword}\r\n              type='password'\r\n              placeholder='New Password'\r\n              onChange={event => setNewPassword(event.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React from 'react'\r\n\r\nconst Home = () => (\r\n  <>\r\n    <h1>Welcome to Financial Trax</h1>\r\n  </>\r\n)\r\n\r\nexport default Home\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const indexAccount = (user) => {\r\n  return axios.get(apiUrl + '/accounts/', {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const showAccount = (user, id) => {\r\n  return axios.get(apiUrl + `/accounts/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const createAccount = (user, account) => {\r\n  return axios.post(apiUrl + '/accounts/',\r\n    { account },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const updateAccount = (user, id, account) => {\r\n  return axios.patch(apiUrl + `/accounts/${id}/`,\r\n    { account },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const deleteAccount = (user, id) => {\r\n  return axios.delete(apiUrl + `/accounts/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\nimport { indexAccount } from '../../api/account'\r\n\r\nconst Accounts = ({ user, msgAlert }) => {\r\n  if (!user) return <Navigate to ='/' />\r\n\r\n  const [accounts, setAccounts] = useState([])\r\n  const [navigateCreate, setNavigateCreate] = useState(false)\r\n\r\n  let mappedAccounts\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await indexAccount(user)\r\n        setAccounts(res.data.accounts)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Accounts List failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleNavigateCreate = () => {\r\n    setNavigateCreate(true)\r\n  }\r\n\r\n  // If accounts is null, accounts is still loading\r\n  if (!accounts) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (navigateCreate) {\r\n    return <Navigate to='/accounts/create' />\r\n  } else if (accounts.length === 0) {\r\n    return (\r\n      <>\r\n        <h1>No accounts have been added</h1>\r\n        <Button variant='success' onClick={handleNavigateCreate}>Create</Button>\r\n      </>\r\n    )\r\n  } else {\r\n    mappedAccounts = accounts.map(account => (\r\n      <li key={account.id}>\r\n        <Link to={`/accounts/${account.id}`}>{account.company} - {account.type} - {account.account_number}</Link>\r\n      </li>\r\n    ))\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n            <Button variant='success' onClick={handleNavigateCreate}>Create</Button>\r\n            <h3>Accounts</h3>\r\n            <p>Company - Account Type - Account Number</p>\r\n            <ul>{mappedAccounts}</ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Accounts\r\n","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst FundForm = ({ handleSubmit, fund, setFund, fundInfo, setFundInfo }) => (\r\n  <Form onSubmit={handleSubmit}>\r\n    <Form.Group controlId='tickerSymbol'>\r\n      <Form.Label>Ticker</Form.Label>\r\n      <Form.Control\r\n        placeholder='Ticker Symbol'\r\n        ticker_symbol='ticker_symbol'\r\n        value={fund.ticker_symbol}\r\n        onChange={event => setFund(prev => ({ ...prev, ticker_symbol: event.target.value })) }\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='companyName'>\r\n      <Form.Label>Company Name</Form.Label>\r\n      <Form.Control\r\n        placeholder='Company Name'\r\n        value={fund.company_name}\r\n        onChange={event => setFund(prev => ({ ...prev, company_name: event.target.value })) }\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='price'>\r\n      <Form.Label>Price</Form.Label>\r\n      <Form.Control\r\n        placeholder='Price'\r\n        price='price'\r\n        value={fund.price}\r\n        onChange={event => setFund(prev => ({ ...prev, price: event.target.value })) }\r\n      />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='amountOwned'>\r\n      <Form.Label>Amount Owned</Form.Label>\r\n      <Form.Control\r\n        placeholder='Amount Owned'\r\n        value={fundInfo.amount_owned}\r\n        onChange={event => setFundInfo(prev => ({ ...prev, amount_owned: event.target.value })) }\r\n      />\r\n    </Form.Group>\r\n\r\n    <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n  </Form>\r\n)\r\n\r\nexport default FundForm\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const indexFund = (user) => {\r\n  return axios.get(apiUrl + '/funds/', {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const showFund = (user, id) => {\r\n  return axios.get(apiUrl + `/funds/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const createFund = (user, fund, id) => {\r\n  return axios.post(apiUrl + '/funds/',\r\n    { fund, account: id },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const updateFund = (user, id, fund) => {\r\n  return axios.patch(apiUrl + `/funds/${id}/`,\r\n    { fund },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const deleteFund = (user, id) => {\r\n  return axios.delete(apiUrl + `/funds/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const indexAccountSpecificFundInfo = (user, id) => {\r\n  return axios.get(apiUrl + `/accounts/${id}/fund-infos/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const indexFundInfo = (user) => {\r\n  return axios.get(apiUrl + '/fund-infos/', {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const showFundInfo = (user, id) => {\r\n  return axios.get(apiUrl + `/fund-infos/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const createFundInfo = (user, fundInfo) => {\r\n  return axios.post(apiUrl + '/fund-infos/',\r\n    { fund_info: fundInfo },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const updateFundInfo = (user, id, fundInfo) => {\r\n  return axios.patch(apiUrl + `/fund-infos/${id}/`,\r\n    { fund_info: fundInfo },\r\n    {\r\n      headers: {\r\n        Authorization: `Token ${user.token}`\r\n      }\r\n    })\r\n}\r\n\r\nexport const deleteFundInfo = (user, id) => {\r\n  return axios.delete(apiUrl + `/fund-infos/${id}/`, {\r\n    headers: {\r\n      Authorization: `Token ${user.token}`\r\n    }\r\n  })\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\n\r\nimport { deleteAccount, showAccount } from '../../api/account'\r\n\r\nimport FundForm from '../fund/FundForm'\r\nimport { createFund } from '../../api/fund'\r\nimport { createFundInfo, indexAccountSpecificFundInfo } from '../../api/fund-info'\r\n\r\nconst Account = ({ user, msgAlert }) => {\r\n  const [account, setAccount] = useState({})\r\n  const [fundInfoData, setFundInfoData] = useState([])\r\n  const [balance, setBalance] = useState(0)\r\n\r\n  const [deleted, setDeleted] = useState(false)\r\n  const [fundCreatedId, setFundCreatedId] = useState('')\r\n  const { id } = useParams()\r\n\r\n  const [fund, setFund] = useState({\r\n    ticker_symbol: '',\r\n    company_name: '',\r\n    price: ''\r\n  })\r\n  const [fundInfo, setFundInfo] = useState({\r\n    amount_owned: '',\r\n    balance: 0,\r\n    account: 0,\r\n    fund: 0\r\n  })\r\n  // const [createdId, setCreatedId] = useState('')\r\n  const [amountOwned, setAmountOwned] = useState(0)\r\n  let mappedFunds\r\n\r\n  if (!user) return <Navigate to='/' />\r\n\r\n  useEffect(() => {\r\n    const myPromise = new Promise((resolve, reject) => {\r\n      resolve(showAccount(user, id))\r\n      console.log(reject)\r\n    })\r\n\r\n    myPromise\r\n      .then(res => {\r\n        setAccount(res.data.account)\r\n        setFundInfo(prev => ({ ...prev, account: res.data.account.id }))\r\n        return res.data.account.id\r\n      })\r\n      .then(id => indexAccountSpecificFundInfo(user, id))\r\n      .then(fundRes => {\r\n        setBalance(fundRes.data.balance.balance__sum)\r\n        setFundInfoData(fundRes.data.fund_infos)\r\n      })\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Fund Info Update Failed',\r\n          message: err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }, [])\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteAccount(user, id)\r\n      setDeleted(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to delete account',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const myPromise = new Promise((resolve, reject) => {\r\n      try {\r\n        resolve(createFund(user, fund, account.id))\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n\r\n    myPromise\r\n      .then(res => {\r\n        const newFundInfo = { ...fundInfo, fund: res.data.fund.id, balance: (res.data.fund.price * fundInfo.amount_owned) }\r\n        setFundInfo(prev => newFundInfo)\r\n        return newFundInfo\r\n      })\r\n      .then((fundInfo) => createFundInfo(user, fundInfo)) // PROBLEM\r\n      .then(res => {\r\n        setFundCreatedId(res.data.fund_info.id)\r\n        msgAlert({\r\n          heading: 'Fund Created',\r\n          message: `Created ${fundInfo.fund.company_name} successfully.`,\r\n          variant: 'success'\r\n        })\r\n      })\r\n\r\n      .catch(error => console.error(error))\r\n  }\r\n\r\n  if (fundInfoData) {\r\n    mappedFunds = fundInfoData.map(fundInfo => {\r\n      return (\r\n        <li key={fundInfo.id}>\r\n          <Link to={`/fund-infos/${fundInfo.id}`}>\r\n            {fundInfo.fund.company_name} - {fundInfo.fund.ticker_symbol} - Price: {fundInfo.fund.price} - Owned: {fundInfo.amount_owned} - Balance: {fundInfo.balance}\r\n          </Link>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n  if (!account) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (deleted) {\r\n    return <Navigate to='/accounts/' />\r\n  } else if (fundCreatedId) {\r\n    return <Navigate to={`/fund-infos/${fundCreatedId}`} />\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n            <Button variant='danger' onClick={handleDelete}>Delete Account</Button>\r\n            <Link to={`/accounts/${id}/edit`}>\r\n              <Button variant='primary' type='submit'>Update Account</Button>\r\n            </Link>\r\n            <h1>{account.company} {account.type}</h1>\r\n\r\n            <h3>Account Number: {account.account_number}</h3>\r\n\r\n            {balance && (<h3>Balance: {balance}</h3>)}\r\n            <h3>Inception: {account.inception}</h3>\r\n            <br></br>\r\n            {fundInfoData !== [] && (\r\n              <>\r\n                <h3>Funds</h3>\r\n                <ul>\r\n                  {mappedFunds}\r\n                </ul>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <FundForm\r\n              handleSubmit={handleSubmit}\r\n              fund={fund}\r\n              setFund={setFund}\r\n              amountOwned={amountOwned}\r\n              setAmountOwned={setAmountOwned}\r\n              fundInfo={fundInfo}\r\n              setFundInfo={setFundInfo}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Account\r\n","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst AccountForm = ({ handleSubmit, account, handleAccountChange }) => (\r\n  <Form onSubmit={handleSubmit}>\r\n    <Form.Group controlId='type'>\r\n      <Form.Label>Type</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Type'\r\n        name='type'\r\n        value={account.type}\r\n        onChange={handleAccountChange} />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='accountnumber'>\r\n      <Form.Label>Account Number</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Number'\r\n        name='account_number'\r\n        value={account.account_number}\r\n        onChange={handleAccountChange} />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='company'>\r\n      <Form.Label>Company</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Company'\r\n        name='company'\r\n        value={account.company}\r\n        onChange={handleAccountChange} />\r\n    </Form.Group>\r\n\r\n    <Form.Group controlId='inception'>\r\n      <Form.Label>Inception</Form.Label>\r\n      <Form.Control\r\n        placeholder='Account Inception'\r\n        name='inception'\r\n        value={account.inception}\r\n        onChange={handleAccountChange}\r\n      />\r\n    </Form.Group>\r\n\r\n    <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n  </Form>\r\n)\r\n\r\nexport default AccountForm\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n// Import AccountForm:\r\nimport AccountForm from './AccountForm'\r\nimport { createAccount } from '../../api/account'\r\n\r\nconst AccountCreate = ({ user, msgAlert }) => {\r\n  const [account, setAccount] = useState({\r\n    type: '',\r\n    company: '',\r\n    inception: '',\r\n    account_number: ''\r\n  })\r\n  const [createdId, setCreatedId] = useState('')\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await createAccount(user, account)\r\n      setCreatedId(res.data.account.id)\r\n\r\n      msgAlert({\r\n        heading: 'Account Created',\r\n        message: `Created ${account.type} successfully.`,\r\n        variant: 'success'\r\n      })\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to create account',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleAccountChange = ({ target }) => {\r\n    setAccount(prev => ({ ...prev, [target.name]: target.value }))\r\n  }\r\n\r\n  // if user is null, redirect to home page\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  } else if (createdId) {\r\n    // if movie has been created,Navigate to the 'show' page\r\n    return <Navigate to={`/accounts/${createdId}`} />\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Create Account</h3>\r\n        <AccountForm\r\n          handleSubmit={handleSubmit}\r\n          handleAccountChange={handleAccountChange}\r\n          account={account}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountCreate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\n\r\nimport AccountForm from './AccountForm'\r\nimport { showAccount, updateAccount } from '../../api/account'\r\n\r\nconst AccountEdit = ({ user, msgAlert }) => {\r\n  const [account, setAccount] = useState({\r\n    type: '',\r\n    company: '',\r\n    inception: '',\r\n    account_number: ''\r\n  })\r\n  const [updated, setUpdated] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showAccount(user, id)\r\n        setAccount(res.data.account)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Failed to load account',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await updateAccount(user, id, account)\r\n      setUpdated(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to update account',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleAccountChange = ({ target }) => {\r\n    setAccount(prev => ({ ...prev, [target.name]: target.value }))\r\n  }\r\n\r\n  if (updated) {\r\n    // Navigate to the 'show' page\r\n    return <Navigate to={`/accounts/${id}`} />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Edit Account</h3>\r\n        <AccountForm\r\n          handleSubmit={handleSubmit}\r\n          account={account}\r\n          handleAccountChange={handleAccountChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountEdit\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\nimport { indexFund } from '../../api/fund'\r\n\r\nconst Funds = ({ user, msgAlert }) => {\r\n  if (!user) return <Navigate to ='/' />\r\n\r\n  const [funds, setFunds] = useState([])\r\n  const [navigateCreate, setNavigateCreate] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await indexFund(user)\r\n        setFunds(res.data.funds)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Funds List failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleNavigateCreate = () => {\r\n    setNavigateCreate(true)\r\n  }\r\n\r\n  let mappedFunds\r\n  // If funds is null, funds is still loading\r\n  if (!funds) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (funds.length === 0) {\r\n    return <h1>No funds have been added</h1>\r\n  } else if (navigateCreate) {\r\n    return <Navigate to='/funds/create' />\r\n  } else {\r\n    mappedFunds = funds.map(fund => (\r\n      <li key={fund.id}>\r\n        <Link to={`/funds/${fund.id}`}>{fund.company_name} - {fund.ticker_symbol} - {fund.price}</Link>\r\n      </li>\r\n    ))\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n            <Button variant='success' onClick={handleNavigateCreate}>Create</Button>\r\n            <h3>Funds</h3>\r\n            <p>Company - Ticker - Price</p>\r\n            <ul>{mappedFunds}</ul>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Funds\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\n\r\nimport { deleteFund, showFund } from '../../api/fund'\r\n\r\nconst Fund = ({ user, msgAlert }) => {\r\n  const [fund, setFund] = useState({})\r\n  const [deleted, setDeleted] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  if (!user) return <Navigate to='/' />\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showFund(user, id)\r\n        setFund(res.data.fund)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Fund failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteFund(user, id)\r\n      setDeleted(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to delete fund',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!fund) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (deleted) {\r\n    return <Navigate to='/funds/' />\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n            <h1>Ticker: {fund.ticker_symbol}</h1>\r\n            <h3>Name: {fund.company_name}</h3>\r\n            <h3>Price: {fund.price}</h3>\r\n\r\n            <Button variant='danger' onClick={handleDelete}>Delete Fund</Button>\r\n            <Link to={`/funds/${id}/edit`}>\r\n              <Button variant='primary' type='submit'>Update Fund</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Fund\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n// Import FundForm:\r\nimport FundForm from './FundForm'\r\nimport { createFund } from '../../api/fund'\r\n\r\nconst FundCreate = ({ user, msgAlert }) => {\r\n  const [fund, setFund] = useState({\r\n    ticker_symbol: '',\r\n    company_name: '',\r\n    price: 0\r\n  })\r\n  const [createdId, setCreatedId] = useState('')\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await createFund(user, fund)\r\n      setCreatedId(res.data.fund.id)\r\n\r\n      msgAlert({\r\n        heading: 'Fund Created',\r\n        message: `Created ${fund.type} successfully.`,\r\n        variant: 'success'\r\n      })\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to create fund',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  // if user is null, redirect to home page\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  } else if (createdId) {\r\n    // if movie has been created,Navigate to the 'show' page\r\n    return <Navigate to={`/funds/${createdId}`} />\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Create Fund</h3>\r\n        <FundForm\r\n          handleSubmit={handleSubmit}\r\n          fund={fund}\r\n          setFund={setFund}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FundCreate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\n\r\nimport FundForm from './FundForm'\r\nimport { showFund, updateFund } from '../../api/fund'\r\n\r\nconst FundEdit = ({ user, msgAlert }) => {\r\n  const [fund, setFund] = useState({\r\n    ticker_symbol: '',\r\n    company_name: '',\r\n    price: 0\r\n  })\r\n  const [updated, setUpdated] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showFund(user, id)\r\n        setFund(res.data.fund)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Failed to load fund',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      await updateFund(user, id, fund)\r\n      setUpdated(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to update fund',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (updated) {\r\n    // Navigate to the 'show' page\r\n    return <Navigate to={`/funds/${id}`} />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Edit Fund</h3>\r\n        <FundForm\r\n          handleSubmit={handleSubmit}\r\n          fund={fund}\r\n          setFund={setFund}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FundEdit\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Navigate, useParams } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\n\r\nimport { updateFund } from '../../api/fund'\r\nimport { deleteFundInfo, showFundInfo } from '../../api/fund-info'\r\nimport { indexStockData } from '../../api/polygon'\r\n\r\nconst FundInfo = ({ user, msgAlert }) => {\r\n  const [fundInfo, setFundInfo] = useState()\r\n  const [deleted, setDeleted] = useState(false)\r\n  const [stockData, setStockData] = useState({})\r\n  const { id } = useParams()\r\n  // const navigate = useNavigate()\r\n\r\n  if (!user) return <Navigate to='/' />\r\n\r\n  useEffect(() => {\r\n    const myPromise = new Promise((resolve, reject) => {\r\n      resolve(showFundInfo(user, id))\r\n      console.log(reject)\r\n    })\r\n\r\n    myPromise\r\n      .then(res => {\r\n        setFundInfo(res.data.fund_info)\r\n        return res.data.fund_info.fund.ticker_symbol\r\n      })\r\n      .then((tickerSymbol) => indexStockData(tickerSymbol))\r\n      .then(res => {\r\n        setStockData(res.data)\r\n        return res.data.close\r\n      })\r\n      .then(async close => {\r\n        await updateFund(user, fundInfo.fund.id, { price: close })\r\n      })\r\n      .then()\r\n      .catch(error => {\r\n        msgAlert({\r\n          heading: 'Fund Info failed to load',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }, [])\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteFundInfo(user, id)\r\n      setDeleted(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to delete fund',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (!fundInfo) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (deleted) {\r\n    return <Navigate to={`/accounts/${fundInfo.account.id}/`} />\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className='row'>\r\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n            <h1>Ticker: {fundInfo.fund.ticker_symbol}</h1>\r\n            <h3>Name: {fundInfo.fund.company_name}</h3>\r\n            <h3>Price: {fundInfo.fund.price}</h3>\r\n            <h3>Amount Owned: {fundInfo.amount_owned}</h3>\r\n            <h3>Balance: {fundInfo.balance}</h3>\r\n\r\n            <Button variant='danger' onClick={handleDelete}>Delete Fund</Button>\r\n\r\n            <br />\r\n            <h1>RealTime</h1>\r\n            <br />\r\n            <h3>open:{stockData.open}</h3>\r\n            <h3>high:{stockData.high}</h3>\r\n            <h3>low:{stockData.low}</h3>\r\n            <h3>close:{stockData.close}</h3>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FundInfo\r\n","import axios from 'axios'\r\n\r\nexport const indexStockData = (tickerSymbol) => {\r\n  return axios.get(`https://api.polygon.io/v1/open-close/${tickerSymbol}/2022-03-10?adjusted=true&apiKey=L7KxVlsGiPCOHCRjeTRtRRKZU4yDRQvq`, {\r\n    headers: {\r\n      Authorization: 'Bearer L7KxVlsGiPCOHCRjeTRtRRKZU4yDRQvq'\r\n    }\r\n  })\r\n}\r\n","/* eslint-disable no-tabs */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\n\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\n\r\nimport Home from './components/Home'\r\nimport Accounts from './components/account/Accounts'\r\nimport Account from './components/account/Account'\r\nimport AccountCreate from './components/account/AccountCreate'\r\nimport AccountUpdate from './components/account/AccountUpdate'\r\n\r\nimport Funds from './components/fund/Funds'\r\nimport Fund from './components/fund/Fund'\r\nimport FundCreate from './components/fund/FundCreate'\r\nimport FundUpdate from './components/fund/FundUpdate'\r\n\r\nimport FundInfo from './components/fund-info/FundInfo'\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null)\r\n  const [msgAlerts, setMsgAlerts] = useState([])\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem('user')\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser)\r\n      setUser(foundUser)\r\n    }\r\n  }, [])\r\n\r\n  const clearUser = () => setUser(null)\r\n\r\n  const msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header user={user} />\r\n      {msgAlerts.map(msgAlert => (\r\n        <AutoDismissAlert\r\n          key={msgAlert.id}\r\n          heading={msgAlert.heading}\r\n          variant={msgAlert.variant}\r\n          message={msgAlert.message}\r\n          id={msgAlert.id}\r\n        />\r\n      ))}\r\n      <main className='container'>\r\n        <Routes>\r\n          <Route\r\n            path='/'\r\n            element={<Home /> }\r\n          />\r\n\r\n          <Route\r\n            path='/sign-up/'\r\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\r\n          />\r\n          <Route\r\n            path='/sign-in/'\r\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\r\n          />\r\n          <Route\r\n            path='/sign-out/'\r\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/change-password/'\r\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\r\n          />\r\n\r\n          <Route\r\n            path='/accounts/'\r\n            element={<Accounts msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/accounts/:id'\r\n            element={<Account msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/accounts/create'\r\n            element={<AccountCreate msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/accounts/:id/edit'\r\n            element={<AccountUpdate msgAlert={msgAlert} user={user} /> }\r\n          />\r\n\r\n          <Route\r\n            path='/funds/'\r\n            element={<Funds msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/funds/:id'\r\n            element={<Fund msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/funds/create'\r\n            element={<FundCreate msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/funds/:id/edit'\r\n            element={<FundUpdate msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/fund-infos/:id'\r\n            element={<FundInfo msgAlert={msgAlert} user={user} /> }\r\n          />\r\n        </Routes>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\n\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst appJsx = (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(appJsx, document.getElementById('root'))\r\n"],"sourceRoot":""}